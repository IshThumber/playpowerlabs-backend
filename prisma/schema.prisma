generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model classes {
  classId  Int        @unique
  students students[]
}

model students {
  studentId Int     @unique @default(autoincrement())
  name      String
  password  String
  email     String  @unique
  classId   Int
  classes   classes @relation(fields: [classId], references: [classId])
}

// model User {
//   id          Int          @id @default(autoincrement())
//   username    String       @unique
//   password    String
//   role        Role
//   assignments Assignment[]
//   submissions Submission[]

//   @@index([username])
// }

// enum Role {
//   TEACHER
//   STUDENT
// }

// model Assignment {
//   id          Int          @id @default(autoincrement())
//   title       String
//   description String
//   due_date    DateTime
//   total_score Int
//   created_by  User         @relation(fields: [createdById], references: [id])
//   createdById Int
//   submissions Submission[]

//   @@index([created_by])
// }

// model Submission {
//   id           Int        @id @default(autoincrement())
//   assignment   Assignment @relation(fields: [assignmentId], references: [id])
//   assignmentId Int
//   student      User       @relation(fields: [studentId], references: [id])
//   studentId    Int
//   score        Int
//   submitted_at DateTime   @default(now())
//   feedback     Feedback?
// }

// model Feedback {
//   id           Int        @id @default(autoincrement())
//   submission   Submission @relation(fields: [submissionId], references: [id])
//   submissionId Int
//   teacher      User       @relation(fields: [teacherId], references: [id])
//   teacherId    Int
//   feedback     Text
// }
